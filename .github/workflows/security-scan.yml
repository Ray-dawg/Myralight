name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly at midnight on Sunday

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --json > npm-audit.json || true

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif

      - name: Upload Snyk SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
        if: always()

      - name: Run ESLint with security plugin
        run: |
          npx eslint --ext .js,.jsx,.ts,.tsx src/ --no-eslintrc --config .eslintrc.security.json -f sarif > eslint-results.sarif || true

      - name: Upload ESLint SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: eslint-results.sarif
        if: always()

      - name: Run local security audit script
        run: node scripts/security-audit.js

      - name: Archive security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            security-reports/
            npm-audit.json
            snyk.sarif
            eslint-results.sarif
        if: always()

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{ env.SONAR_TOKEN != '' }}
